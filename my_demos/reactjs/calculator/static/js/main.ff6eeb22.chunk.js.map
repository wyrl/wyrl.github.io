{"version":3,"sources":["components/DisplayText.jsx","components/CalcButtons/CalcButton.jsx","components/CalcButtons/index.jsx","Calculator.jsx","App.js","serviceWorker.js","index.js"],"names":["DisplayText","react_default","a","createElement","className","type","value","this","props","onChange","e","Component","CalcButton","state","disabled","b","setState","_this2","onClick","children","CalcButtons","onSelected","CalcButtons_CalcButton","component","Calculator","text","num","lastNum","answer","lastOperator","dotComponent","undefined","currentComponent","currentAction","handleClick","c","_this","isMatchAction","isNumber","setDisplayNumber","clear","del","dot","resultOp","numStr","toString","substr","length","indexOf","op","n","Number","id","components_DisplayText","components_CalcButtons","App","src_Calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff6eeb22.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass DisplayText extends Component {\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"display-text form-control form-control-lg\"\r\n        type=\"text\"\r\n        value={this.props.value}\r\n        onChange={e => {}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayText;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CalcButton extends Component {\r\n  state = { disabled: false };\r\n\r\n  disabled(b) {\r\n    this.setState({ disabled: b });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        onClick={() => this.props.onClick(this)}\r\n        className=\"calc-btn number-button btn btn-light btn-lg\"\r\n        disabled={this.state.disabled}\r\n      >\r\n        {this.props.children}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalcButton;\r\n","import React, { Component } from \"react\";\r\nimport CalcButton from \"./CalcButton\";\r\n\r\nclass CalcButtons extends Component {\r\n  render() {\r\n    const { onSelected } = this.props;\r\n    return (\r\n      <div className=\"number-buttons container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, 7)}>\r\n              7\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, 8)}>\r\n              8\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, 9)}>\r\n              9\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, \"+\")}>\r\n              +\r\n            </CalcButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, 4)}>\r\n              4\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, 5)}>\r\n              5\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, 6)}>\r\n              6\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, \"-\")}>\r\n              -\r\n            </CalcButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, 1)}>\r\n              1\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, 2)}>\r\n              2\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, 3)}>\r\n              3\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, \"x\")}>\r\n              x\r\n            </CalcButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, \"C\")}>\r\n              C\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, 0)}>\r\n              0\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, \".\")}>\r\n              .\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, \"/\")}>\r\n              /\r\n            </CalcButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, \"DEL\")}>\r\n              DEL\r\n            </CalcButton>\r\n          </div>\r\n          <div className=\"col-3 number-col\" />\r\n          <div className=\"col-3 number-col\" />\r\n          <div className=\"col-3 number-col\">\r\n            <CalcButton onClick={component => onSelected(component, \"=\")}>\r\n              =\r\n            </CalcButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalcButtons;\r\n","import React, { Component } from \"react\";\r\nimport DisplayText from \"./components/DisplayText\";\r\nimport CalcButtons from \"./components/CalcButtons\";\r\nimport { isNumber } from \"util\";\r\n\r\nclass Calculator extends Component {\r\n  state = {\r\n    text: 0\r\n  };\r\n\r\n  num = 0;\r\n  lastNum = 0;\r\n  answer = 0;\r\n  lastOperator = \"\";\r\n  dotComponent = undefined;\r\n  currentComponent = undefined;\r\n  currentAction = undefined;\r\n\r\n  handleClick = (component, c) => {\r\n    this.currentComponent = component;\r\n    this.currentAction = c;\r\n    if (this.isMatchAction()) return;\r\n\r\n    if (this.lastOperator === \"\") {\r\n      this.answer = 0;\r\n    }\r\n    const text = this.num === 0 && isNumber(c) ? c : this.num + \"\" + c;\r\n    this.setDisplayNumber(text);\r\n  };\r\n\r\n  isMatchAction() {\r\n    return this.clear() || this.del() || this.dot() || this.resultOp();\r\n  }\r\n\r\n  clear() {\r\n    if (this.currentAction !== \"C\") {\r\n      return false;\r\n    }\r\n\r\n    this.setState({ text: 0 });\r\n    this.num = 0;\r\n    this.answer = 0;\r\n    this.lastNum = 0;\r\n    this.lastOperator = \"\";\r\n    if (this.dotComponent !== undefined) this.dotComponent.disabled(false);\r\n\r\n    return true;\r\n  }\r\n\r\n  del() {\r\n    if (this.currentAction !== \"DEL\") {\r\n      return false;\r\n    }\r\n    const numStr =\r\n      this.answer !== 0 ? this.answer.toString() : this.num.toString();\r\n\r\n    this.answer = 0;\r\n    const num = numStr.substr(0, numStr.length - 1);\r\n    if (num === \"\") this.setDisplayNumber(0);\r\n    else this.setDisplayNumber(num);\r\n    return true;\r\n  }\r\n\r\n  dot() {\r\n    const dotComponent = this.dotComponent;\r\n    if (this.currentAction === \".\") {\r\n      if (this.state.text.toString().indexOf(\".\") > -1) {\r\n        return false;\r\n      }\r\n\r\n      if (dotComponent === undefined)\r\n        this.setState({ dotComponent: this.currentComponent });\r\n\r\n      this.currentComponent.disabled(true);\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  resultOp() {\r\n    if (this.op(this.currentAction)) {\r\n      this.setState({ text: this.answer });\r\n      if (this.currentAction === \"=\") {\r\n        this.lastOperator = \"\";\r\n      } else {\r\n        this.lastOperator = this.currentAction;\r\n      }\r\n      this.num = 0;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  op(n) {\r\n    switch (n) {\r\n      case \"+\":\r\n        this.answer = Number(this.answer) + Number(this.num);\r\n        return true;\r\n      case \"-\":\r\n        this.answer = Number(this.num) - Number(this.answer);\r\n        return true;\r\n      case \"x\":\r\n        this.answer =\r\n          Number(this.answer === 0 ? 1 : this.answer) * Number(this.num);\r\n        return true;\r\n      case \"/\":\r\n        this.answer =\r\n          Number(this.answer === 0 ? 1 : this.answer) / Number(this.num);\r\n        return true;\r\n      case \"=\":\r\n        if (this.lastOperator !== \"\") {\r\n          this.op(this.lastOperator);\r\n          this.lastNum = this.answer;\r\n        } else this.answer = this.lastNum;\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  setDisplayNumber(num) {\r\n    this.num = num;\r\n    this.lastNum = this.num;\r\n    this.setState({ text: num });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main id=\"calc-container\" className=\"container\">\r\n        <header className=\"header\">\r\n          <DisplayText value={this.state.text} />\r\n        </header>\r\n        <footer>\r\n          <CalcButtons onSelected={this.handleClick} />\r\n        </footer>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./Calculator\";\n\nclass App extends Component {\n  render() {\n    return <Calculator />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}